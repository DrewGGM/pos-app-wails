name: Build and Release POS System

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Wails CLI
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install
          cd ..

      - name: Build app for Windows
        run: wails build -clean -platform windows/amd64

      - name: Create release archive
        run: |
          cd build/bin
          Compress-Archive -Path RestaurantPOS.exe -DestinationPath ../../RestaurantPOS-Windows-x64.zip
          cd ../..
        shell: pwsh

      - name: Install Inno Setup
        run: choco install innosetup -y

      - name: Build Windows Installer
        run: |
          cd installer
          & "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" setup.iss
          cd ..
        shell: pwsh

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: |
            RestaurantPOS-Windows-x64.zip
            build/installer/RestaurantPOS-Setup-*.exe

  build-android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Decode keystore
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        run: |
          echo "$KEYSTORE_BASE64" | base64 -d > $HOME/release-keystore.jks

      - name: Create keystore.properties for Kitchen
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_ALIAS_PASSWORD }}
        run: |
          cat > mobile-apps/kitchen/keystore.properties << EOF
          storeFile=$HOME/release-keystore.jks
          storePassword=$KEYSTORE_PASSWORD
          keyAlias=$KEY_ALIAS
          keyPassword=$KEY_PASSWORD
          EOF

      - name: Create keystore.properties for Waiter
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_ALIAS_PASSWORD }}
        run: |
          cat > mobile-apps/waiter/keystore.properties << EOF
          storeFile=$HOME/release-keystore.jks
          storePassword=$KEYSTORE_PASSWORD
          keyAlias=$KEY_ALIAS
          keyPassword=$KEY_PASSWORD
          EOF

      - name: Build Kitchen APK
        run: |
          cd mobile-apps/kitchen
          chmod +x gradlew
          ./gradlew assembleRelease --no-daemon
          cd ../..

      - name: Build Waiter APK
        run: |
          cd mobile-apps/waiter
          chmod +x gradlew
          ./gradlew assembleRelease --no-daemon
          cd ../..

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Rename APKs
        run: |
          mv mobile-apps/kitchen/app/build/outputs/apk/release/app-release.apk kitchen-app-${{ steps.get_version.outputs.VERSION }}.apk
          mv mobile-apps/waiter/app/build/outputs/apk/release/app-release.apk waiter-app-${{ steps.get_version.outputs.VERSION }}.apk

      - name: Upload Android artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-builds
          path: |
            kitchen-app-*.apk
            waiter-app-*.apk

  release:
    needs: [build-windows, build-android]
    runs-on: ubuntu-latest

    steps:
      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-build

      - name: Download Android artifacts
        uses: actions/download-artifact@v4
        with:
          name: android-builds

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: "Restaurant POS System ${{ steps.get_version.outputs.VERSION }}"
          body: |
            ## Restaurant POS System Release ${{ steps.get_version.outputs.VERSION }}

            Sistema de Punto de Venta para Restaurantes con Facturaci√≥n Electr√≥nica DIAN (Colombia)

            ### üì¶ Instalaci√≥n

            **Windows (Aplicaci√≥n Principal)**

            1. Descargar e instalar `RestaurantPOS-Setup-*.exe` (recomendado)
            2. O descargar `RestaurantPOS-Windows-x64.zip` para versi√≥n portable

            **Android (Apps M√≥viles)**

            1. Descargar en tu dispositivo Android:
               - `kitchen-app-${{ steps.get_version.outputs.VERSION }}.apk` - App de Cocina
               - `waiter-app-${{ steps.get_version.outputs.VERSION }}.apk` - App de Mesero
            2. Habilitar "Instalar desde fuentes desconocidas"
            3. Instalar las APKs
            4. Las apps se actualizar√°n autom√°ticamente

            ### üîÑ Actualizaci√≥n Autom√°tica

            Las apps m√≥viles detectan autom√°ticamente nuevas versiones al iniciar:
            - ‚úÖ Verificaci√≥n autom√°tica de actualizaciones
            - ‚úÖ Descarga en segundo plano
            - ‚úÖ Notificaci√≥n cuando est√° lista
            - ‚úÖ Instalaci√≥n con un clic

            ### ‚úÖ Requisitos

            **Windows:** Windows 10/11 (64-bit), PostgreSQL 14+, WebView2 Runtime

            **Android:** Android 8.0 (API 26) o superior

            ### üîë Credenciales por Defecto

            - Usuario: `admin`
            - Contrase√±a: `admin`
            - ‚ö†Ô∏è Cambiar inmediatamente despu√©s del primer login
          files: |
            RestaurantPOS-Windows-x64.zip
            build/installer/RestaurantPOS-Setup-*.exe
            kitchen-app-*.apk
            waiter-app-*.apk
